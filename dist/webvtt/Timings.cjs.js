"use strict";const lodash=require("lodash"),utils=require("../utils.cjs.js");class Timings{constructor(t){this.segment=t}shift(t){return t<0?this.run({startTime:(t/1e3).toString(),endTime:(t/1e3).toString()}):this.run({startTime:"+"+(t/1e3).toString(),endTime:"+"+(t/1e3).toString()})}shiftStart(t){return t<0?this.run({startTime:(t/1e3).toString()}):this.run({startTime:"+"+(t/1e3).toString()})}shiftEnd(t){return t<0?this.run({endTime:(t/1e3).toString()}):this.run({endTime:"+"+(t/1e3).toString()})}resync(t,e){this.run({startTime:"*"+(t/e).toString(),endTime:"*"+(t/e).toString()})}toString(t){return lodash.isArray(this.segment)?this.segment.map(e=>t?.toLowerCase()==="srt"?utils.toSrtTimingString(e.startTime,e.endTime):utils.toVttTimingString(e.startTime,e.endTime)):t?.toLowerCase()==="srt"?utils.toSrtTimingString(this.segment.startTime,this.segment.endTime):utils.toVttTimingString(this.segment.startTime,this.segment.endTime)}update(timings,segment){return!timings.startTime&&!timings.endTime?this.segment:(timings.startTime&&segment.setStartTime(eval(segment.startTime+timings.startTime)),timings.endTime&&segment.setEndTime(eval(segment.endTime+timings.endTime)),segment)}updateAll(t,e){return e.forEach(i=>this.update.call(null,t,i)),e}run(t){return lodash.isArray(this.segment)?this.updateAll(t,this.segment):this.update(t,this.segment)}}module.exports=Timings;
